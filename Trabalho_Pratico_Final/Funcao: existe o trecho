.data
texto: .asciiz "um dois três quatro cinco seis"
pAceita: .asciiz "A palavra foi encontrada."
pRejeita: .asciiz "A palavra não foi encontrada."
palavra: .space 20
.text 

li $v0, 8 #código para ler uma string
#Endereço onde vai ser armazenada a palavra se passa em a0 e o tamanho em a1
la $a0, palavra #onde guardar a palavra
li $a1, 20#tamanho da palavra
syscall #Lê a string
la $t0, texto #t0 guarda o início do texto.
la $t1, palavra #t1 guarda o início da palavra
#t3,t4 são os contadores da função, inicializo eles aqui. Pra não dar problema.
li $t3, 1 # letras do texto
li $t4, 1 #letras da palavra

loop: beqz $t3, rejeita #se t3 for zero, cheguei no fim do texto. Sai do programa
beqz $t4, rejeita #se t4 for igual a zero, sai do programa.
lb $t3, 0($t0) #pega as letras do texto
lb $t4, 0($t1) #pega as letras da palavra
beq $t3, $t4, MesmaLetra #se as letras são iguais...
#senão, incrementa o contador do texto
addi $t0, $t0, 1
j loop # e volta pro loop pra comparar a próxima letra.  

MesmaLetra: #se as letras foram iguais...
#incremento os dois contadores e comparo de novo. T0 e T1 são os endereços. T3 e T4, as letras
addi $t0, $t0, 1 #texto 
addi $t1, $t1, 1 #palavra
lb $t3, 0($t0) #pega as letras do texto
lb $t4, 0($t1) #pega as letras da palavra
beq $t4, 0xa, aceita #O último caracter da string de input é o \n, 0xa. Se t4, que é a letra da palavra, for \n, cheguei no fim da palavra, então ela está no texto
beq $t4, $t3 MesmaLetra #se depois de incrementar as letras ainda forem iguais, volta pro sub-loop e incrementa de novo
#se chegou até aqui, a palavra não está na sequência certa.
la $t1, palavra #reseta t1, t0 não precisa resetar porque se a palavra não estava aqui não vai estar pra trás
j loop

rejeita: la $a0, pRejeita #Só define o texto que vou escrever
j fim

aceita: la $a0, pAceita #Só define o texto que vou escrever
j fim

fim:
li $v0, 4
syscall #imprime a string de aceita ou rejeita definida anteriormente
li $v0, 10#código para terminar a execução
syscall#termina a execução.
